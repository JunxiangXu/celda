% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findMarkersTree.R, R/getDecisions.R
\name{getDecisions}
\alias{getDecisions}
\title{Gets cluster estimates using rules generated by
 `celda::findMarkersTree`}
\usage{
getDecisions(rules, features)

getDecisions(rules, features)
}
\arguments{
\item{rules}{List object. The \code{rules} element from
\code{findMarkersTree} output. Returns NA if cluster estimation was
ambiguous.}

\item{features}{A L (features) by N (samples) numeric matrix.}
}
\value{
A character vector of label predicitions.

A character vector of label predicitions.
}
\description{
Get decisions for a matrix of features. Estimate cell
 cluster membership using feature matrix input.

Get decisions for a matrix of features. Estimate cell
 cluster membership using feature matrix input.
}
\examples{
\dontrun{
library(M3DExampleData)
counts <- M3DExampleData::Mmus_example_list$data
# Subset 500 genes for fast clustering
counts <- as.matrix(counts[seq(1501, 2000), ])
# Cluster genes and samples each into 10 modules
sce <- celda_CG(counts = counts, L = 10, K = 5, verbose = FALSE)
# Get features matrix and cluster assignments
factorized <- factorizeMatrix(sce)
features <- factorized$proportions$cell
class <- celdaClusters(sce)
# Generate Decision Tree
DecTree <- findMarkersTree(features,
  class,
  oneoffMetric = "modified F1",
  threshold = 1,
  consecutiveOneoff = FALSE)
# Get sample estimates in training data
getDecisions(DecTree$rules, features)
}
}
