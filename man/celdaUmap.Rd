% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generics.R
\name{celdaUmap}
\alias{celdaUmap}
\alias{celdaUmap,SingleCellExperiment-method}
\title{Embeds cells in two dimensions using umap.}
\usage{
celdaUmap(sce, ...)

celdaUmap(sce, ...)

\S4method{celdaUmap}{SingleCellExperiment}(
  sce,
  useAssay = "counts",
  maxCells = NULL,
  minClusterSize = 100,
  modules = NULL,
  seed = 12345,
  nNeighbors = 30,
  minDist = 0.75,
  spread = 1,
  pca = TRUE,
  initialDims = 50,
  cores = 1,
  ...
)
}
\arguments{
\item{sce}{A \link[SingleCellExperiment]{SingleCellExperiment} object
returned by \link{celda_C}, \link{celda_G}, or \link{celda_CG}.}

\item{...}{Additional parameters to pass to \link[uwot]{umap}.}

\item{useAssay}{A string specifying which \link[SummarizedExperiment]{assay}
slot to use. Default "counts".}

\item{maxCells}{Integer. Maximum number of cells to plot. Cells will be
randomly subsampled if \code{ncol(sce) > maxCells}. Larger numbers of cells
requires more memory. If NULL, no subsampling will be performed.
Default NULL.}

\item{minClusterSize}{Integer. Do not subsample cell clusters below this
threshold. Default 100.}

\item{modules}{Integer vector. Determines which features modules to use for
UMAP. If NULL, all modules will be used. Default NULL.}

\item{seed}{Integer. Passed to \link[withr]{with_seed}. For reproducibility,
a default value of 12345 is used. If NULL, no calls to
\link[withr]{with_seed} are made.}

\item{nNeighbors}{The size of local neighborhood used for
manifold approximation. Larger values result in more global
views of the manifold, while smaller values result in more
local data being preserved. Default 30.
See \link[uwot]{umap} for more information.}

\item{minDist}{The effective minimum distance between embedded points.
Smaller values will result in a more clustered/clumped
embedding where nearby points on the manifold are drawn
closer together, while larger values will result on a more
even dispersal of points. Default 0.75.
See \link[uwot]{umap} for more information.}

\item{spread}{The effective scale of embedded points. In combination with
\code{min_dist}, this determines how clustered/clumped the
 embedded points are. Default 1. See \link[uwot]{umap} for more information.}

\item{pca}{Logical. Whether to perform
dimensionality reduction with PCA before UMAP. Only works for celda_C
 \code{sce} objects.}

\item{initialDims}{Integer. Number of dimensions from PCA to use as
input in UMAP. Default 50. Only works for celda_C \code{sce} objects.}

\item{cores}{Number of threads to use. Default 1.}

\item{counts}{Integer matrix. Rows represent features and columns represent
cells. This matrix should be the same as the one used to generate
`celdaMod`.}

\item{celdaMod}{Celda object of class `celda_CG`.}
}
\value{
A two column matrix of UMAP coordinates#' @examples
data(celdaCGSim, celdaCGMod)
umapRes <- celdaUmap(celdaCGSim$counts, celdaCGMod)

\code{sce} with UMAP coordinates
 (columns "celda_UMAP1" & "celda_UMAP2") added to
 \code{\link[SummarizedExperiment]{colData}(sce)}.
}
\description{
Embeds cells in two dimensions using \link[uwot]{umap} based on
 a celda model. For celda_C \code{sce} objects, PCA on the normalized counts
 is used to reduce the number of features before applying UMAP. For celda_CG
 \code{sce} object, UMAP is run on module probabilities to reduce the number
 of features instead of using PCA. Module probabilities are square-root
 transformed before applying UMAP.
}
\examples{
data(sceCeldaCG)
umapRes <- celdaUmap(sceCeldaCG)
}
